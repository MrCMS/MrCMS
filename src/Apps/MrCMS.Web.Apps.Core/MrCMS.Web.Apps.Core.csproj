<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
        <StaticWebAssetBasePath Condition="$(StaticWebAssetBasePath) == ''">/Apps/Core/</StaticWebAssetBasePath>
    </PropertyGroup>

    <ItemGroup>
        <FrameworkReference Include="Microsoft.AspNetCore.App"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Lindhart.Analyser.MissingAwaitWarning" Version="2.0.0"/>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.Cookies" Version="2.2.0"/>
        <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.1"/>
        <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0"/>
        <PackageReference Include="X.PagedList.Mvc.Core" Version="8.4.3"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\Lib\MrCMS.Web.Admin.Infrastructure\MrCMS.Web.Admin.Infrastructure.csproj"/>
        <ProjectReference Include="..\..\Lib\MrCMS\MrCMS.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <Folder Include="wwwroot\assets\"/>
    </ItemGroup>

    <!--
          1. Install npm packages
          "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
          The first time the task is executed. Then, it only runs when you change the package.json file.
          Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
       -->
    <Target Name="NpmInstall" Inputs="package.json" Outputs="node_modules/.install-stamp">
        <!--
            Use npm install or npm ci depending on RestorePackagesWithLockFile value.
            Uncomment the following lines if you want to use this feature:
    
            <PropertyGroup>
                <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
            </PropertyGroup>
         -->
        <Exec Command="npm ci" Condition="$(RestorePackagesWithLockFile) == 'true'"/>
        <Exec Command="npm install" Condition="$(RestorePackagesWithLockFile) != 'true'"/>

        <!-- Write the stamp file, so incremental builds work -->
        <Touch Files="node_modules/.install-stamp" AlwaysCreate="true"/>
    </Target>

    <!--
        2. Run npm run build before building the .NET project.
        MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
     -->
    <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
        <Exec Command="npm run build"/>
    </Target>

</Project>
