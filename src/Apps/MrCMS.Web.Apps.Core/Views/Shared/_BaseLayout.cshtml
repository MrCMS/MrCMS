@using MrCMS.Website.Optimization
@using MrCMS.Services.Canonical
@using MrCMS.Settings
@using System.Drawing
@using MrCMS.ACL.Rules
@using MrCMS.Entities.Documents.Web
@model dynamic
@inject SEOSettings SeoSettings
@inject SiteSettings SiteSettings
@inject GoogleRecaptchaSettings GoogleRecaptchaSettings
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
<!DOCTYPE html>
<html lang="en">
<head>
    <title>@(this.PageTitle())</title>
    <meta name="description" content="@(this.Description())"/>
    <meta name="keywords" content="@(this.Keywords())"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    @await Html.RenderUIVendorStyles()
    @await Html.RenderUIStyles()
    @Html.Raw(SeoSettings.TrackingScripts)
    @if (Model is Webpage)
    {
        @Html.Raw(Model.CustomHeaderScripts)
        @ViewData.LinkTags().Render()
    }

    @if (GoogleRecaptchaSettings.Enabled)
    {
        <!--improve the loading performance of reCAPTCHA Enterpris -->
        <link rel="preconnect" href="https://www.google.com">
    }
</head>
<body data-antiforgery-token="@Xsrf.GetAndStoreTokens(Context).RequestToken">
@Html.Raw(SeoSettings.TrackingScriptsBody)

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="/">
            <img src="/Apps/Core/Content/img/mrcms-hat.gif" height="30" class="d-inline-block align-top" alt="Mr CMS" title="Mr CMS"/>
            Mr CMS
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-main" aria-controls="navbar-main" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbar-main">
            @{
                await Html.RenderZone("Main Navigation");
            }
            <ul class="navbar-nav ml-auto">
                @*
                        <li class="nav-item dropdown">
                        <a class="nav-item nav-link dropdown-toggle mr-md-2" href="#" id="dd-search" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-search"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dd-search">
                        <partial name="SearchForm"/>
                        @{await Html.RenderPartialAsync("SearchForm");}
                        </div>
                        </li>
                    *@

                <li class="nav-item dropdown">
                    @{
                        await Html.RenderZone("Header Right");
                    }
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container py-3">
    @{
        await Html.RenderZone("Before Content");
    }
    @RenderBody()
    @{
        await Html.RenderZone("After Content");
    }
</div>

<hr/>

<div class="container">
    <footer>
        @{
            await Html.RenderZone("Footer");
        }
    </footer>
</div>
<partial name="_Impersonating"/>
@if (GoogleRecaptchaSettings.Enabled)
{
    <script src="https://www.google.com/recaptcha/enterprise.js?onload=recaptchaOnLoad&render=@(GoogleRecaptchaSettings.IsCheckboxType ? "explicit" : GoogleRecaptchaSettings.SiteKey)" async defer></script>
}

@if (await Html.CanAccess<AdminBarACL>(User, "Show") && SiteSettings.EnableInlineEditing)
{
    <div class="d-print-none">
        <partial name="~/Areas/Admin/Views/Shared/InPageEditor.cshtml" model="Model"/>
    </div>
}
@if (IsSectionDefined("JavascriptBlockInclude"))
{
    @await RenderSectionAsync("JavascriptBlockInclude")
}
@if (Model is Webpage)
{
    @Html.Raw(Model.CustomFooterScripts)
}
@await Html.RenderUIVendorScripts()
@await Html.RenderUIScripts()
@if (SessionHelper.IsMiniProfileEnabled)
{
    <mini-profiler />
}
</body>
</html>