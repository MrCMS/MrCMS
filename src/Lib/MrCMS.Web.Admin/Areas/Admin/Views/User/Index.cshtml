@using System.Linq
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MrCMS.Entities.People
@using MrCMS.Services
@using MrCMS.Web.Admin.Infrastructure.TagHelpers
@using X.PagedList
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@model UserSearchQuery
@inject IGetCurrentUser GetCurrentUser
@{
    ViewBag.Title = "Users";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var users = ViewData["users"] as IPagedList<User> ?? PagingHelper.EmptyList<User>();
    var roleOptions = ViewData["roles"] as List<SelectListItem> ?? new List<SelectListItem>();
    var currentUser = await GetCurrentUser.GetLoggedInUser();
}

<form asp-controller="User" asp-action="Index" method="get">
    <admin-header>
        <row>
            <admin-header-title title="@await Html.Resource("admin - users", "Users", option=> option.DisableInlineEditing())"/>

            <admin-header-actions>
                @Html.ActionLink("Add", "Add", "User", null, new { @class = "btn btn-outline-primary", data_toggle = "fb-modal" })
                <input type="submit" class="btn btn-primary" value="@await Html.Resource("Search", options => options.DisableInlineEditing())"/>
            </admin-header-actions>
        </row>
    </admin-header>
    <fieldset>
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" placeholder="Email" type="text"/>
                    <span asp-validation-for="Email"></span>
                </div>
            </div>
            <div class="col-6">

                <div class="form-group">
                    <label asp-for="UserRoleId">Role</label>
                    <select asp-for="UserRoleId" asp-items="roleOptions" class="form-control"></select>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="FirstName"></label>
                    <input asp-for="FirstName" class="form-control" placeholder="First Name" type="text"/>
                    <span asp-validation-for="FirstName"></span>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="LastName"></label>
                    <input asp-for="LastName" class="form-control" placeholder="Last Name" type="text"/>
                    <span asp-validation-for="LastName"></span>
                </div>
            </div>
        </div>

    </fieldset>
</form>
<hr/>
@if (users.Any())
{
    <table class="table table-condensed table-striped">
        <tr>
            <th>
                @await Html.Resource("Email")
            </th>
            <th>
                @await Html.Resource("Name")
            </th>
            <th>
                @await Html.Resource("Roles")
            </th>
            <th>
                @await Html.Resource("Created On")
            </th>
            <th></th>
        </tr>
        @foreach (User user in users)
        {
            <tr>
                <td>
                    @Html.ActionLink(user.Email ?? "", "Edit", new { id = user.Id })
                </td>
                <td>
                    @user.Name
                </td>
                <td>
                    @(user.Roles.Any() ? string.Join(", ", user.Roles.Select(role => role.Name)) : "-")
                </td>
                <td>
                    @user.CreatedOn
                </td>
                <td>
                    @if (!user.IsAdmin && user.Id != currentUser.Id)
                    {
                        using (Html.BeginForm("Impersonate", "User", new { user.Id }, FormMethod.Post))
                        {
                            <button type="submit" class="btn btn-sm btn-default">Impersonate</button>
                        }
                    }
                </td>
            </tr>
        }
    </table>
    <div class="mt-3">
        @Html.PagedListPager(users, page => Url.Action("Index", "User", new { page, Model.Email, Model.FirstName, Model.LastName, Model.UserRoleId }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>
}
else
{
    <p>@await Html.Resource("Admin Users None", "No users matched your criteria").</p>
}