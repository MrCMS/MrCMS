@using MrCMS.Entities.Notifications
@using MrCMS.Web.Admin.ACL
@using MrCMS.Web.Admin.Infrastructure.TagHelpers
@using X.PagedList
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model MrCMS.Web.Admin.Models.NotificationSearchQuery
@{
    var results = ViewData["results"] as IPagedList<Notification> ?? PagingHelper.EmptyList<Notification>();
    var notificationTypeOptions = ViewData["notification-type-options"] as List<SelectListItem> ?? new List<SelectListItem>();
}
<form asp-controller="Notification" asp-action="Index" method="get">

    <admin-header>
        <row>
            <admin-header-title title="@await Html.Resource("admin-notifications", "Notifications", option=> option.DisableInlineEditing())" />
            <admin-header-actions>
                <span class="btn-group">
                    @Html.ActionLink(await Html.PlainResource("Admin Notifications Push", "Push"), "Push", "Notification", new { }, new { @class = "btn btn-secondary", data_toggle = "fb-modal" })
                    <input type="submit" class="btn btn-primary" value="Search" />
                </span>
            </admin-header-actions>
        </row>
    </admin-header>

    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                <label asp-for="Message"></label>
                <input asp-for="Message" type="text" class="form-control" />
                <span asp-validation-for="Message"></span>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label asp-for="NotificationType"></label>
                <select asp-for="NotificationType" asp-items="@notificationTypeOptions" class="form-control"></select>
                <span asp-validation-for="NotificationType"></span>
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <label asp-for="From"></label>
                <input asp-for="From" type="text" class="date-time-picker form-control" autocomplete="off"/>
                <span asp-validation-for="From"></span>
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <label asp-for="To"></label>
                <input asp-for="To" type="text" class="date-time-picker form-control" autocomplete="off" />
                <span asp-validation-for="To"></span>
            </div>
        </div>
    </div>

</form>
@if (!results.Any())
{
    @await Html.Resource("admin-notifications-none", "No notifications")
}
else
{
    <table class="table table-striped table-condensed mt-3" style="overflow: scroll">
        <thead>
            <tr>
                <th>
                    @await Html.Resource("admin-date", "Date")
                </th>
                <th>
                    @await Html.Resource("admin-notification-type", "Notification Type")
                </th>
                <th>
                    @await Html.Resource("admin-message", "Message")
                </th>
                <th>
                    @await Html.Resource("admin-user", "User")
                </th>
                <th>
                    @await Html.Resource("admin-actions", "Actions")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var notification in results)
            {
                <tr>
                    <td>
                        @notification.CreatedOn.ToString("dd/MM/yyyy HH:mm")
                    </td>
                    <td>
                        @notification.NotificationType.ToString().BreakUpString()
                    </td>
                    <td>
                        @Html.Raw(notification.Message)
                    </td>
                    <td>
                        @notification.UserName
                    </td>
                    <td>
                        <div class="btn-group">
                            @if (await Html.CanAccess<NotificationACL>(NotificationACL.Delete))
                            {
                                @Html.ActionLink("Delete", "Delete", "Notification", new { id = notification.Id }, new { @class = "btn btn-sm btn-danger", data_toggle = "fb-modal" })
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.PagedListPager(results, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
}