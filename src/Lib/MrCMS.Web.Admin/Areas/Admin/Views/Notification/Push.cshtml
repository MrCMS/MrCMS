@model MrCMS.Web.Admin.Models.NotificationModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPopup.cshtml";
    var publishTypeOptions = ViewData["publish-type-options"] as List<SelectListItem> ?? new List<SelectListItem>();
    var notificationTypeOptions = ViewData["notification-type-options"] as List<SelectListItem> ?? new List<SelectListItem>();
}
@using (Html.BeginForm("Push", "Notification", FormMethod.Post))
{
    <fieldset>
        <legend>
            @await Html.Resource("Admin Notifications Push Notification", "Push notification")
            <span class="btn-group d-inline pull-right">
                <input type="submit" class="btn-primary btn" value="@await Html.Resource("Admin Notifications Push", "Push", options => options.DisableInlineEditing())"/>
            </span>
        </legend>
        @Html.ReturnToReferrer()
        <div class="form-group">
            @Html.LabelFor(model => model.Message)
            @Html.TextBoxFor(model => model.Message, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.Message)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishType)
            @Html.DropDownListFor(model => model.PublishType, publishTypeOptions, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.PublishType)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationType)
            @Html.DropDownListFor(model => model.NotificationType, notificationTypeOptions, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.NotificationType)
        </div>
    </fieldset>
}