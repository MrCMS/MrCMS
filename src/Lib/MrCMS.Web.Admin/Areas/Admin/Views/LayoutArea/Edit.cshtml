@using System.Linq
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MrCMS.Entities.Documents.Layout
@using MrCMS.Entities.Widget
@using MrCMS.Web.Admin.Infrastructure.TagHelpers
@model MrCMS.Web.Admin.Models.UpdateLayoutAreaModel
@{
    ViewBag.Title = "Edit | " + Model.AreaName;
    var layout = ViewData["layout"] as Layout;
    var widgets = ViewData["widgets"] as IList<Widget> ?? new List<Widget>();
}

<form asp-controller="LayoutArea" asp-action="Edit" method="post">

    <admin-header>
        <row>
            <admin-header-title title="@Model.AreaName " />

            <admin-header-actions>
                <span class="btn-group">
                    @Html.ActionLink(await Html.PlainResource("admin-back", "Back"), "Edit", "Layout", new { id = layout.Id }, new { @class = "btn btn-secondary" })
                    <a href="@Url.Action("Delete", "LayoutArea", new {id = Model.Id})" class="btn btn-danger" data-toggle="fb-modal">@await Html.Resource("admin-delete", "Delete")</a>
                    <button class="btn btn-primary">@await Html.Resource("admin-save", "Save")</button>
                </span>
            </admin-header-actions>
        </row>
    </admin-header>

    <div class="form-group">
        <label asp-for="AreaName"></label>
        <input type="text" asp-for="AreaName" class="form-control" />
        <span asp-validation-for="AreaName"></span>
    </div>

</form>


<admin-header>
    <row>
        <admin-header-title title="@await Html.Resource("admin-widgets", "Widgets", option=> option.DisableInlineEditing())" />

        <admin-header-actions>

            <div class="btn-group">
                @{
                    if (widgets.Any())
                    {
                        @Html.ActionLink(await Html.PlainResource("Sort"), "SortWidgets", "LayoutArea", new { id = Model.Id, returnUrl = Context.Request.GetEncodedUrl() }, new { @class = "btn btn-sm btn-secondary", @data_toggle = "fb-modal" })
                    }
                }
                <a href="@Url.Action(await Html.PlainResource("admin-add", "Add"), "Widget", new {id = Model.Id, returnUrl = Context.Request.GetEncodedUrl()})" class="btn btn-sm btn-primary" data-toggle="fb-modal">@await Html.Resource("Admin Layout Area Add Widget", "Add widget")</a>
            </div>
        </admin-header-actions>
    </row>
</admin-header>


@{
    if (widgets.Any())
    {
        <table class="table table-condensed table-striped">
            <thead>
                <tr>
                    <th>
                        @await Html.Resource("Name")
                    </th>
                    <th>
                        @await Html.Resource("Type")
                    </th>
                    <th>
                        @await Html.Resource("Actions")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var widget in widgets)
                {
                    <tr>
                        <td>@widget.Name</td>
                        <td>
                            @widget.WidgetTypeFormatted
                        </td>
                        <td>
                            <div class="btn-group">
                                @Html.ActionLink(await Html.PlainResource("Edit"), "Edit", "Widget", new { id = widget.Id }, new { @class = "btn btn-secondary btn-sm"})
                                <a href="@Url.Action(await Html.PlainResource("Delete"), "Widget", new {id = widget.Id})" class="btn btn-sm btn-danger" data-toggle="fb-modal">@await Html.Resource("Delete")</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @Html.InfoBlock(await Html.PlainResource("Heads up"), await Html.PlainResource("Admin Layout Area Widgets Info", "Click add widget to add the first widget to this area."))
    }
}